<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.mappers.adminMapper">
	
<!-- 	===== 현아 시작 ===== -->
	
	<select id="idCheck" resultType="String">
		SELECT
			AD_ID 
		FROM ADMIN
		WHERE AD_ID = #{AD_ID}
	</select>
	
	<insert id="adminInsert">
		INSERT INTO ADMIN
			(AD_NO
			, AD_ID 
			, AD_PW
			, AD_NAME
			, AD_DATE
			, AD_ACTIVE
			, ROL_NO)
		VALUES (CONCAT("AD", IFNULL((SELECT MAX(CAST(REPLACE(AD_NO, "AD", "") AS UNSIGNED)) + 1
									 FROM ADMIN A), 1))
			, #{AD_ID}
			, #{AD_PW}
			, #{AD_NAME}
			, DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i%s')
			, '1'
			, 'RO3')
	</insert>
	
	<select id="getAdminList" resultType="map">
		SELECT
			CAST(REPLACE(AD_NO, "AD", "") AS UNSIGNED) "AD_NO"
			, AD_ID
			, ROL_NO
			, AD_ACTIVE
		FROM ADMIN
		WHERE 1=1
	    <if test='!"RO1".equals(RO_NUM)'>
	        AND ROL_NO != 'RO1'
	    </if>
		ORDER BY AD_NO
	</select>
	
	<delete id="adminDelete">
		DELETE FROM ADMIN
		WHERE AD_ID = #{AD_ID}
	</delete>
	
	<update id="adminUpdate">
		UPDATE ADMIN
		SET AD_ACTIVE = #{AD_ACTIVE}
			, ROL_NO = #{ROL_NO}
		WHERE AD_ID = #{AD_ID}
	</update>
	
	<update id="displayUpdate">
		<foreach collection="list" item="code" open="" close="" separator=";">
		UPDATE CODE
		   SET CODE = #{code.CODE}
		   	 , ACTIVE = #{code.ACTIVE}
		 WHERE 1 = 1
		   AND CO_TYPE = #{code.CO_TYPE}
		   AND CO_NO = #{code.CO_NO} 
		</foreach>	
	</update>
	
<!-- 	===== 현아 끝 ===== -->



<!-- 	===== 무창 시작 ===== -->

	<select id="codeSelect" parameterType="java.util.List" resultType="map">
		<foreach collection="list" item="code" open="" close="" separator=";">
		select ACTIVE
		  from CODE
		 where 1 = 1
		   and CO_TYPE = #{code.CO_TYPE} 
		   and CO_NO = #{code.CO_NO}
		</foreach>		   
	</select>

	<insert id="codeInsert" parameterType="map">
		insert 
			into CODE
				(
				  CO_TYPE
				, CO_NO
				, CODE
				, HIDE
				, ACTIVE
				)
			values
				(
				  #{code.CO_TYPE}
				, (select cast(ifnull(max(cast(CO_NO AS UNSIGNED)), 0) + 1 AS CHAR)
					 from CODE C
					where 1 = 1
					  and CO_TYPE = #{code.CO_TYPE})
    			, #{code.CODE}
    			, '0'
    			, '0'
				)	
	</insert>

	<update id="codeUpdate" parameterType="java.util.List">
		<foreach collection="list" item="code" open="" close="" separator=";">
		update CODE
		   set CODE = #{code.CODE}
		   <if test='code.HIDE == "1"'>
		   	 , ACTIVE = '0'
		   	 , HIDE = #{code.HIDE}
		   </if>
		   <if test='code.HIDE == "0"'>
		   	 , ACTIVE = #{code.ACTIVE}
		   	 , HIDE = #{code.HIDE}
		   </if>
		 where 1 = 1
		   and CO_TYPE = #{code.CO_TYPE}
		   and CO_NO = #{code.CO_NO} 
		</foreach>	
	</update>

	<delete id="codeDelete" parameterType="java.util.List">
		delete from CODE
		 where
		<foreach collection="list" item="code" open="" close="" separator="or">
			(CO_TYPE = #{code.CO_TYPE} and CO_NO = #{code.CO_NO})		
		</foreach>
	</delete>
	
	<insert id="messageInsert" parameterType="map">
		insert 
			into MESSAGE
				(
				  CO_TYPE
				, CO_NO
				, CODE
				, HIDE
				)
			values
				(	
				  #{CO_TYPE}
				, (select cast(ifnull(max(cast(CO_NO AS UNSIGNED)), 0) + 1 AS CHAR)
					 from MESSAGE M
					where 1 = 1
					  and CO_TYPE = #{CO_TYPE})
    			, #{CODE}
    			, #{HIDE}
				)	
	</insert>

	<update id="messageUpdate" parameterType="java.util.List">
		<foreach collection="list" item="code" open="" close="" separator=";">
		update MESSAGE
		   set CODE = #{code.CODE}
		   	 , HIDE = #{code.HIDE}
		 where 1 = 1
		   and CO_TYPE = #{code.CO_TYPE}
		   and CO_NO = #{code.CO_NO} 
		</foreach>	
	</update>

	<delete id="messageDelete" parameterType="java.util.List">
		delete from MESSAGE
		 where
		<foreach collection="list" item="code" open="" close="" separator="or">
			(CO_TYPE = #{code.CO_TYPE} and CO_NO = #{code.CO_NO})		
		</foreach>
	</delete>
	
<!-- 	===== 무창 끝 ===== -->



<!-- 	===== 성엽 시작 ===== -->

	<select id="getMemberList" resultType="map">
		 select MEM_NO
			  , MEM_ID
			  , MEM_NICK
			  , MEM_NAME
			  , MEM_EMAIL
			  , MEM_DATE
			  , (select COUNT(*)
				  from REPORT
				 where RPT_USER_NO = MEM_ID) as RPT_USER_NO
			  , MEM_CAT
		  from MEMBERS
		 ORDER BY cast(replace(MEM_NO, "ME", "") AS UNSIGNED);
	</select>
	
	<select id="getContentboardList" resultType="map">
		select PRO_NO
			 , PRO_NAME
			 , PRO_WR
			 , (select CODE 
			      FROM CODE 
			     WHERE CONCAT(CO_TYPE, CO_NO) = PRO_TC) AS "PRO_TC"
			 , date_format(str_to_date(PRO_DATE, '%Y%m%d%H%i%s'), '%Y%m%d %H:%i:%s')  AS PRO_DATE
			 , PRO_STATE
		from PRODUCT
		where 1 = 1
		ORDER BY cast(replace(PRO_NO, "PR", "") AS UNSIGNED)DESC
	</select>
	
	<update id="memberStop" parameterType="java.util.List">
		<foreach collection="list" item="member" open="" close="" separator=";">
		update MEMBERS
		   set MEM_CAT = #{member.MEM_CAT}
		 WHERE 1 = 1  
		   and MEM_NO = #{member.MEM_NO}
		</foreach>
	</update>
	
	<update id="boardUpdate" parameterType="java.util.List">
		<foreach collection="list" item="board" open="" close="" separator=";">
		update PRODUCT
		   set PRO_STATE = #{board.PRO_STATE}
		 WHERE 1 = 1  
		   and PRO_NO = #{board.PRO_NO}
		</foreach>
	</update>
	
	<select id="getReportList" resultType="map">
		select 
			   RPT_NO
			 , USER_NO
			 , RPT_USER_NO
			 , CODE
			 , date_format(RPT_TIME, '%Y-%m-%d %H:%I:%S') as RPT_TIME
		from REPORT
		join CODE
		  on RPT_SELECT = concat(CO_TYPE, CO_NO)
		ORDER BY RPT_NO DESC
	</select>
	
	<insert id="insertReport" parameterType="map">
		insert INTO REPORT
			 ( RPT_NO
			 , USER_NO
			 , RPT_USER_NO
			 , RPT_SELECT
			 , RPT_TIME)
		values(
			  (SELECT *
				 FROM (SELECT IFNULL(MAX(CAST(RPT_NO as unsigned)), 0) + 1
						 FROM REPORT) A)
			, #{MEM_ID}
			, #{reportTarget}
			, #{rptCode}
			, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'))
	</insert>

	<select id="getMemberCntList" resultType="map">
		<![CDATA[
		WITH RECURSIVE TMP 
		AS ( 
		    SELECT MONTH(DATE_ADD(NOW(), INTERVAL -4 MONTH)) AS N
		    UNION ALL
		    SELECT N + 1 AS NUM 
		    FROM TMP
		    WHERE N < (MONTH(DATE_ADD(NOW(), INTERVAL -4 MONTH)) + 4)
		)
		SELECT CONCAT(T.MONTH, '월') AS MONTH
			 , IFNULL(C.CNT, 0) AS CNT
		  FROM (SELECT CASE WHEN N % 12 = 0 THEN 12
					        ELSE N % 12 END AS MONTH
				  FROM TMP) T
		  LEFT JOIN (SELECT MONTH(MEM_DATE) AS MONTH
						  , COUNT(*) AS CNT
					   FROM MEMBERS
					  GROUP BY MONTH(MEM_DATE))	C
		    ON T.MONTH = C.MONTH
	    ]]>
	</select>
	
	<select id="getCategoryCntList" resultType="map">
		SELECT C.CODE
		     , IFNULL(P.CNT, 0) AS CNT
		  FROM (SELECT CONCAT(CO_TYPE, CO_NO) AS PRO_CATE
					 , CODE
				  FROM CODE
				 WHERE CO_TYPE = 'CM'
		 ) C
		 LEFT JOIN (SELECT PRO_CATE
						 , COUNT(*) AS CNT
					  FROM PRODUCT
					 WHERE PRO_TSC = 'TM3' 
					 GROUP BY PRO_CATE) P
		   ON C.PRO_CATE = P.PRO_CATE     
		  ORDER BY P.CNT DESC 
		  LIMIT 5
	</select>
	
	<select id="getTotalTradeList" resultType="map">
		<![CDATA[
		WITH RECURSIVE TMP 
		AS ( 
		    SELECT MONTH(DATE_ADD(NOW(), INTERVAL -4 MONTH)) AS N
		    UNION ALL
		    SELECT N + 1 AS NUM 
		    FROM TMP
		    WHERE N < (MONTH(DATE_ADD(NOW(), INTERVAL -4 MONTH)) + 4)
		)
	    SELECT CONCAT(T.MONTH, '월') AS MONTH
			 , IFNULL(P.CNT, 0) AS CNT
	      FROM (SELECT CASE WHEN N % 12 = 0 THEN 12
					        ELSE N % 12 END AS MONTH
				  FROM TMP) T
	      LEFT JOIN (SELECT MONTH(PRO_DATE) AS MONTH
						  , COUNT(*) AS CNT
					   FROM PRODUCT
					  WHERE PRO_TSC = 'TM3' 
					  GROUP BY MONTH(PRO_DATE)) P
	        ON T.MONTH = P.MONTH
	    ]]>
	</select>
	
<!-- 	===== 성엽 끝 ===== -->
	
	

</mapper>