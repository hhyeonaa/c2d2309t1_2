<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.mycompany.myapp" />
	<context:component-scan base-package="com.team.controller" />
	<context:component-scan base-package="com.team.service" />
	<context:component-scan base-package="com.team.dao" />
	
</beans:beans>

<!-- Websocket 요청 시 핸들러 클래스와 연결하기.  -->
<beans:bean id="chatHandler" class="edu.kh.comm.chat.model.websocket.ChatWebsocketHandler"></beans:bean>

<websocket:handlers>

    <!-- 웹소켓 요청(주소)을 처리할 bean 지정 -->
    <websocket:mapping handler="chatHandler"
        path="/chat" />

    <websocket:handshake-interceptors>
        <!-- interceptor: http통신에서 req, resp 가로채는 역할 handshake-interceptors: 요청 
            관련 데이터 중 HttpSession(로그인 정보, 채팅방번호) 을 가로채서 WebSocketSession에 넣어주는 역할 -->
        <beans:bean
            class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
    </websocket:handshake-interceptors>

    <!-- SockJS 라이브러리를 이용해서 만들어진 웹소켓 객체임을 인식 -->
    <websocket:sockjs />
</websocket:handlers>
